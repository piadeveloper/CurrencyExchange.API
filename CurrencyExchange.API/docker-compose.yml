version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - elk
    stdin_open: true
    tty: true
    depends_on:
      elasticsearch-server:
         condition: service_healthy

  elasticsearch-server:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - elk

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.7.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-server 
networks:
  elk:
    driver: bridge
